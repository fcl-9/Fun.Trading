name: .NET CD

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-release-artifact:
    runs-on: ubuntu-latest

    env:
      CONTAINER_IMAGE_NAME: "fun-trading-api"
      CONTAINER_IMAGE_TAG: latest
      REGISTRY: "ghcr.io/fcl-9"
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'
        
      - name: Restore dependencies
        run: dotnet restore
        
      - name: Build
        run: dotnet build --configuration Release 
        
      - name: Run tests
        run: dotnet test --configuration Release --no-build --logger "trx;LogFileName=test-results.trx"
        continue-on-error: true
        
      - name: Unit Tests Report
        uses: dorny/test-reporter@v1
        with:
          name: unitTests                  
          path: 'tests/**/TestResults/*.trx'
          reporter: dotnet-trx      

      - name: Build Container Image
        run: docker build -t "${{ env.REGISTRY }}/${ CONTAINER_IMAGE_NAME }":"${ CONTAINER_IMAGE_TAG }" . -f "./docker/Dockerfile"

      - name: Save Container Image
        run: docker save --output image.tar "${{ env.REGISTRY }}/${ CONTAINER_IMAGE_NAME }":"${ CONTAINER_IMAGE_TAG }"
      
      - name: Upload Container Image
        uses: actions/upload-artifact@v4
        with:
          name: container-image
          path: image.tar
          retention-days: 1

      - name: Log in to the GH Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push GH Continer image
        run: docker push "${{ env.REGISTRY }}/${ CONTAINER_IMAGE_NAME }":"${ CONTAINER_IMAGE_TAG }"

  staging-deploy: 
    runs-on: ubuntu-latest
    needs: 
      - build-release-artifact
    steps:
        - name: Download Container Image
          uses: actions/download-artifact@v4
          with:
            name: container-image
        
        - name: Load Container Image
          run: docker load --input image.tar
        
  prod-deploy:
    runs-on: ubuntu-latest
    needs: 
      - build-release-artifact
      - staging-deploy
    steps:
      - name: Download Container Image
        uses: actions/download-artifact@v4
        with:
          name: container-image
        
      - name: Load Container Image
        run: docker load --input image.tar
